# .github/workflows/frontend-cd.yml
name: CD - Deploy Frontend to AKS

on:
  # auto-trigger when backend CD finishes
  workflow_run:
    workflows: ["CD - Deploy Backend Services to AKS"]   # must match backend workflow name EXACTLY
    types: [completed]
  # optional manual run
  workflow_dispatch:

jobs:
  deploy_frontend:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: Production

    env:
      # set your real K8s Service names + ports
      PRODUCT_SVC: product-service-w08e1
      ORDER_SVC:   order-service-w08e1
      PRODUCT_PORT: "8000"
      ORDER_PORT:   "8001"

    steps:
      - uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name:   ${{ secrets.AKS_CLUSTER }}

      - name: Resolve backend IPs from AKS
        id: ips
        run: |
          get_ip () { kubectl get svc "$1" -o jsonpath='{.status.loadBalancer.ingress[0].ip}'; }
          for i in {1..60}; do
            PROD=$(get_ip "${PRODUCT_SVC}") || true
            ORD=$(get_ip  "${ORDER_SVC}")  || true
            if [ -n "$PROD" ] && [ -n "$ORD" ]; then break; fi
            sleep 5
          done
          [ -n "$PROD" ] || { echo "::error::Product IP not found"; exit 1; }
          [ -n "$ORD" ]  || { echo "::error::Order IP not found"; exit 1; }
          echo "PRODUCT_IP=$PROD" >> $GITHUB_OUTPUT
          echo "ORDER_IP=$ORD"   >> $GITHUB_OUTPUT

      - name: Inject IPs into frontend/main.js
        run: |
          sed -i "s|_PRODUCT_API_URL_|http://${{ steps.ips.outputs.PRODUCT_IP }}:${PRODUCT_PORT}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|http://${{ steps.ips.outputs.ORDER_IP }}:${ORDER_PORT}|g"   frontend/main.js
          echo "--- main.js after injection ---"
          sed -n '1,200p' frontend/main.js

      - name: ACR login
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build & push frontend image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/frontend:prod-${{ github.run_number }} ./frontend
          docker push     ${{ secrets.ACR_LOGIN_SERVER }}/frontend:prod-${{ github.run_number }}

      - name: Rollout frontend on AKS
        run: |
          # adjust deployment/container names if different
          kubectl set image deployment/frontend frontend=${{ secrets.ACR_LOGIN_SERVER }}/frontend:prod-${{ github.run_number }}
          kubectl rollout status deployment/frontend --timeout=180s
